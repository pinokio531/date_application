/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.20
 * Generated at: 2019-06-05 04:04:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class mainPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	String location = "구월동";
	String driver="com.mysql.jdbc.Driver";//mysql jdbc드라이버(필수)
	String url ="jdbc:mysql://localhost:3306/project";
	String dbId="root";
	String dbPw="as097531";
	String query1="SELECT * FROM villageData WHERE villageName = ? ";
	String query2="SELECT * FROM shopdb where ? < longtitude and longtitude < ? and ? < latitude and latitude < ?;";
	double mLongtitude = 1;
	double mLatitude = 1;
	
	String asd = "asd";
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	String query3="SELECT * FROM villageData";
	String vName = "init";
	String[] categoryList = null;
	ResultSet rset = null;
	PreparedStatement pstmt2 = null;
	String sValues = "";
	
 Double rslo = 0.0;
		Double rsla = 0.0;
		Double rs2lo = 0.0;
		Double rs2la = 0.0;
		String shopname = "";
		String category = "";
		int filter_size = 0;
		String[] categoryAll = {"c_food", "c_smallshop", "c_build", "c_service", "c_educate", "c_visit", "c_medical", "c_tour"};
Double lo = 0.0;
	Double la = 0.0;
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/f_loaddata.jsp", Long.valueOf(1559697008366L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>두근두근 데이트</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"style/menu.css\" />\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=8d9fa66b5a57ed1782dfb50131b06dfd\"></script>\r\n");
      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t");
 
	location = (String) request.getAttribute("location");
	categoryList = (String[]) request.getAttribute("category");
	Class.forName(driver);//JDBC드라이버가 실제로 적용되는 부분
	con = DriverManager.getConnection(url, dbId, dbPw);
	pstmt2 = con.prepareStatement(query3);
	
	rset=pstmt2.executeQuery();
	//////////////////////
	
	pstmt = con.prepareStatement(query1);
	pstmt.setString(1, location);
	
	rs=pstmt.executeQuery();
	
	if(rs.next()){
		if(location.equals(rs.getString("villageName"))){
			mLongtitude = Double.parseDouble(rs.getString("longtitude"));
			mLatitude = Double.parseDouble(rs.getString("latitude"));
			pstmt = con.prepareStatement(query2);
			pstmt.setDouble(1, mLongtitude - 0.001);
			pstmt.setDouble(2, mLongtitude + 0.001);
			pstmt.setDouble(3, mLatitude - 0.001);
			pstmt.setDouble(4, mLatitude + 0.001);
			
			rs=pstmt.executeQuery();
			
		}
	}
	
      out.write("\r\n");
      out.write("\t</script>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t\tvar markers = [];\r\n");
      out.write("\t\twindow.onload = function () {\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction bt_shop_over_event(map, latitude, longtitude) {\r\n");
      out.write("\t\t\tvar sLatitude = latitude;\r\n");
      out.write("\t\t\tvar sLongtitude = longtitude;\r\n");
      out.write("\t\t\tvar imageSrc = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png', // 마커이미지의 주소입니다    \r\n");
      out.write("\t\t\t\timageSize = new daum.maps.Size(64, 69), // 마커이미지의 크기입니다\r\n");
      out.write("\t\t\t\timageOption = { offset: new daum.maps.Point(27, 69) }; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\r\n");
      out.write("\t\t\tvar markerImage = new daum.maps.MarkerImage(imageSrc, imageSize, imageOption),\r\n");
      out.write("\t\t\t\tmarkerPosition = new daum.maps.LatLng(sLatitude, sLongtitude); // 마커가 표시될 위치입니다\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 마커를 생성합니다\r\n");
      out.write("\t\t\tvar marker = new daum.maps.Marker({\r\n");
      out.write("\t\t\t\tposition: markerPosition,\r\n");
      out.write("\t\t\t\timage: markerImage // 마커이미지 설정 \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tmarker.setMap(map);\r\n");
      out.write("\t\t\tmarkers.push(marker);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction setMarkers(map) {\r\n");
      out.write("\t\t\tfor (var i = 0; i < markers.length; i++) {\r\n");
      out.write("\t\t\t\tmarkers[i].setMap(map);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction hideMarkers() {\r\n");
      out.write("\t\t\tsetMarkers(null);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction makeButton(ct, sn, map, la, lo){\r\n");
      out.write("\t\t\tvar jbBtn = document.createElement('input');\r\n");
      out.write("\t\t\tjbBtn.type = 'button';\r\n");
      out.write("\t\t\tjbBtn.value = \"<\" + ct +\"> \" + sn;\r\n");
      out.write("\t\t\tjbBtn.id = \"shopInfo\";\r\n");
      out.write("\t\t\tjbBtn.addEventListener(\"mouseover\", function () {\r\n");
      out.write("\t\t\t\tbt_shop_over_event(map, la, lo);\r\n");
      out.write("\t\t\t}, false);\r\n");
      out.write("\t\t\tjbBtn.addEventListener(\"mouseout\", hideMarkers);\r\n");
      out.write("\r\n");
      out.write("\t\t\tdocument.body.appendChild(jbBtn);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction settingMap() {\r\n");
      out.write("\t\t\tvar container = document.getElementById('map');\r\n");
      out.write("\t\t\tvar options = {\r\n");
      out.write("\t\t\t\tcenter: new daum.maps.LatLng(");
      out.print( mLatitude );
      out.write(',');
      out.write(' ');
      out.print( mLongtitude );
      out.write("),\r\n");
      out.write("\t\t\t\tlevel: 3\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tvar map = new daum.maps.Map(container, options);\r\n");
      out.write("\t\t\t");
 while (rs.next()) {
					rs2lo = Double.parseDouble(rs.getString("longtitude"));
					rs2la = Double.parseDouble(rs.getString("latitude"));
					shopname = rs.getString("shopname");
					category = rs.getString("bigname");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar rcLocation = new daum.maps.LatLng(");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\tvar mkLocation = new daum.maps.Marker(\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tposition: rcLocation\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t);\r\n");
      out.write("\t\t\t\t\tmkLocation.setMap(map);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t");
if(categoryList != null){
						filter_size =categoryList.length;
      out.write("\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"");
      out.print(filter_size);
      out.write("\");\r\n");
      out.write("\t\t\t\t\t\t");
for(int val= 0; val < filter_size; val++){
							String aaaa = categoryList[val];
									if(aaaa.equals("c_food")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"음식\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"들어옴\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

										}
									else if(aaaa.equals("c_smallshop")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"소매\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"들어옴\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

										}
									else if(aaaa.equals("c_build")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"부동산\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

										}
									else if(aaaa.equals("c_service")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"생활서비스\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar jbBtn = document.createElement('input');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

										}
									else if(aaaa.equals("c_educate")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"학문/교육\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar jbBtn = document.createElement('input');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

										}
									else if(aaaa.equals("c_visit")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"숙박\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

										}
									else if(aaaa.equals("c_medical")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"의료\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

										}
									else if(aaaa.equals("c_tour")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif(\"");
      out.print(category);
      out.write("\" == \"관광/여가/오락\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmakeButton(\"");
      out.print( category);
      out.write("\", \"");
      out.print(shopname);
      out.write("\", map, ");
      out.print( rs2la );
      out.write(',');
      out.write(' ');
      out.print( rs2lo );
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
}
					}
				}

			}
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t장소 : ");
      out.print(location);
      out.write("\r\n");
      out.write("\t<br> 좌표 : (");
      out.print(mLatitude);
      out.write(",\r\n");
      out.write("\t");
      out.print(mLongtitude);
      out.write(")\r\n");
      out.write("\t<div id=\"mainContent\">\r\n");
      out.write("\t\t<div id=\"map\" style=\"width: 500px; height: 500px;\"></div>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tsettingMap();\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<div id=\"category\">\r\n");
      out.write("\t\t\t\t<form action=\"f_filtering.jsp\" method=\"get\">\r\n");
      out.write("\t\t\t\t\t음식<input type=\"checkbox\" name=\"cateCheck\" value=\"c_food\">\r\n");
      out.write("\t\t\t\t\t소매<input type=\"checkbox\" name=\"cateCheck\" value=\"c_smallshop\">\r\n");
      out.write("\t\t\t\t\t부동산<input type=\"checkbox\" name=\"cateCheck\" value=\"c_build\">\r\n");
      out.write("\t\t\t\t\t생활서비스<input type=\"checkbox\" name=\"cateCheck\" value=\"c_service\">\r\n");
      out.write("\t\t\t\t\t학문/교육<input type=\"checkbox\" name=\"cateCheck\" value=\"c_educate\">\r\n");
      out.write("\t\t\t\t\t숙박<input type=\"checkbox\" name=\"cateCheck\" value=\"c_visit\">\r\n");
      out.write("\t\t\t\t\t의료<input type=\"checkbox\" name=\"cateCheck\" value=\"c_medical\">\r\n");
      out.write("\t\t\t\t\t관광/여가/오락<input type=\"checkbox\" name=\"cateCheck\" value=\"c_tour\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"location\" value=\"");
      out.print(location);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" name=\"bt_confirm\" value=\"해당조건으로 검색\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"location\">\r\n");
      out.write("\t\t\t\t<form action=\"f_savecourse.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t1번 장소 : <input type=\"text\" name=\"loc1\"><br>\r\n");
      out.write("\t\t\t\t\t<br> 2번 장소 : <input type=\"text\" name=\"loc2\"><br>\r\n");
      out.write("\t\t\t\t\t<br> 3번 장소 : <input type=\"text\" name=\"loc3\"><br>\r\n");
      out.write("\t\t\t\t\t<br> 4번 장소 : <input type=\"text\" name=\"loc4\"><br>\r\n");
      out.write("\t\t\t\t\t<br> 5번 장소 : <input type=\"text\" name=\"loc5\"><br>\r\n");
      out.write("\t\t\t\t\t<br> <input type=\"submit\" value=\"확정\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<a href=\"mypage.jsp\">내 기록 보기</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t");

			if (rset.next()) {
				String bt_first = rset.getString("villageName");
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<form action=\"f_bt_location.jsp\" method=\"get\">\r\n");
      out.write("\t\t\t<input type=\"submit\" name=\"clicked_location\" value=");
      out.print(bt_first);
      out.write(">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t");

			while (rset.next()) {
					vName = rset.getString("villageName");
		
      out.write("\r\n");
      out.write("\t\t<form action=\"f_bt_location.jsp\" method=\"get\">\r\n");
      out.write("\t\t\t<input type=\"submit\" name=\"clicked_location\" value=\"");
      out.print(vName);
      out.write("\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t");

			}
			}
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
